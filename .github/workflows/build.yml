name: Build AutoHotkey Script (with Verification Loop)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    # الخطوة 1: الحصول على الكود
    - name: Checkout code
      uses: actions/checkout@v4

    # الخطوة 2: تثبيت نواة AutoHotkey
    - name: Install AutoHotkey Core
      shell: pwsh
      run: |
        $setupUrl = "https://github.com/AutoHotkey/AutoHotkey/releases/download/v2.0.19/AutoHotkey_2.0.19_setup.exe"
        $setupFile = "AutoHotkey_setup.exe"
        Invoke-WebRequest -Uri $setupUrl -OutFile $setupFile
        Start-Process -FilePath $setupFile -ArgumentList "/silent /elevate" -Wait

    # الخطوة 3: تثبيت المحول Ahk2Exe (مع تعديل السكربت ليصبح صامتاً)
    - name: Install Compiler (and Patch Script)
      shell: pwsh
      run: |
        $installScriptPath = "C:\Program Files\AutoHotkey\UX\install-version.ahk"

        Write-Output "Patching '$installScriptPath' to remove ONLY the final MsgBox..."
        
        # === الكود الجديد لتحديد وحذف السطر الأخير فقط ===
        # نقرأ الملف كمصفوفة من السطور
        $lines = Get-Content -Path $installScriptPath
        
        # نبحث عن رقم السطر الأخير الذي يحتوي على كلمة MsgBox
        $lastMatchIndex = -1
        for ($i = 0; $i -lt $lines.Count; $i++) {
            if ($lines[$i] -like '*MsgBox*') {
                $lastMatchIndex = $i
            }
        }
        
        # إذا وجدنا سطراً مطابقاً، نقوم بحذفه (عبر جعله فارغاً)
        if ($lastMatchIndex -ne -1) {
            Write-Output "Found MsgBox on line $($lastMatchIndex + 1). Removing it."
            $lines[$lastMatchIndex] = ""
        }
        
        # نحفظ الملف مرة أخرى بعد إزالة السطر
        Set-Content -Path $installScriptPath -Value $lines
        # =======================================================

        Write-Output "Script patched successfully. Now running the installer..."

        $interpreterPath = "C:\Program Files\AutoHotkey\v2\AutoHotkey.exe"
        Start-Process -FilePath $interpreterPath -ArgumentList "/script `"$installScriptPath`"" -Wait
        Write-Output "Secondary installation complete."

        - name: Compile and Verify Script
        shell: pwsh
        run: |
          $CompilerFolder = "C:\Program Files\AutoHotkey\Compiler"
          $CompilerExe = "$CompilerFolder\Ahk2Exe.exe"
          $OutputFile = "$($env:GITHUB_WORKSPACE)\Playback.exe"
          
          # 1. التحقق الأولي من وجود المحول
          if (-not (Test-Path $CompilerExe)) {
              throw "COMPILER NOT FOUND! The installation failed to create '$CompilerExe'."
          }
          Write-Output "Compiler found. Starting compilation..."
  
          # تنفيذ أمر التحويل
          & $CompilerExe /in "$($env:GITHUB_WORKSPACE)\Playback.ahk" /out $OutputFile /icon "$($env:GITHUB_WORKSPACE)\play_pause_icon_137298.ico"
          
          # 2. التحقق من كود الخروج (لمنع الفشل الصامت)
          if ($LASTEXITCODE -ne 0) {
              throw "Ahk2Exe.exe failed with exit code $LASTEXITCODE. There was a compilation error."
          }
          
          # 3. إضافة فترة انتظار (بناءً على طلبك)
          Write-Output "Compilation command finished. Waiting 5 seconds to ensure file is written to disk..."
          Start-Sleep -Seconds 5
          
          # 4. التحقق النهائي من وجود الملف الناتج
          Write-Output "Verifying that output file '$OutputFile' exists..."
          if (-not (Test-Path $OutputFile)) {
              throw "VERIFICATION FAILED! The output file was not found after compilation."
          }
          
          Write-Output "SUCCESS! Compiled file has been verified at '$OutputFile'."
        
    # الخطوة 5: رفع الملف التنفيذي الناتج
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: Compiled-Program
        path: Playback.exe