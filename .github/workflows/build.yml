name: Build AutoHotkey Script (with Verification Loop)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    # الخطوة 1: الحصول على الكود
    - name: Checkout code
      uses: actions/checkout@v4

    # الخطوة 2: تثبيت نواة AutoHotkey
    - name: Install AutoHotkey Core
      shell: pwsh
      run: |
        $setupUrl = "https://github.com/AutoHotkey/AutoHotkey/releases/download/v2.0.19/AutoHotkey_2.0.19_setup.exe"
        $setupFile = "AutoHotkey_setup.exe"
        Invoke-WebRequest -Uri $setupUrl -OutFile $setupFile
        Start-Process -FilePath $setupFile -ArgumentList "/silent /elevate" -Wait

    # الخطوة 3: تثبيت المحول Ahk2Exe (مع تعديل السكربت ليصبح صامتاً)
    - name: Install Compiler (and Patch Script)
      shell: pwsh
      run: |
        $installScriptPath = "C:\Program Files\AutoHotkey\UX\install-version.ahk"
        Write-Output "Patching '$installScriptPath' to remove the final MsgBox..."
        $scriptContent = Get-Content -Path $installScriptPath -Raw
        $patchedContent = $scriptContent -replace '(?m)^\s*MsgBox\s.*$', ''
        Set-Content -Path $installScriptPath -Value $patchedContent
        Write-Output "Script patched successfully. Now running the installer..."
        
        # تصحيح مسار المترجم ليكون أكثر دقة
        $interpreterPath = "C:\Program Files\AutoHotkey\v2\AutoHotkey.exe"
        Start-Process -FilePath $interpreterPath -ArgumentList "/script `"$installScriptPath`"" -Wait
        Write-Output "Secondary installation complete."

    # الخطوة 4: التحقق من وجود المحول ثم تحويل السكربت
    - name: Verify Installation and Compile Script
      shell: pwsh
      run: |
        $compilerFolder = "C:\Program Files\AutoHotkey\Compiler"
        $timeoutSeconds = 60
        $intervalSeconds = 5
        $timer = [System.Diagnostics.Stopwatch]::StartNew()
        
        # === حلقة التحقق التي أضفناها ===
        # تستمر بالتحقق طالما المجلد غير موجود والوقت لم ينتهِ
        while (-not (Test-Path $compilerFolder)) {
            if ($timer.Elapsed.TotalSeconds -ge $timeoutSeconds) {
                # إذا انتهى الوقت، أفشل الـ workflow برسالة واضحة
                throw "Timeout! Compiler folder not found at '$compilerFolder' after $timeoutSeconds seconds."
            }
            Write-Output "Compiler folder not found. Waiting for $intervalSeconds seconds before checking again..."
            Start-Sleep -Seconds $intervalSeconds
        }
        $timer.Stop()
        Write-Output "Success! Compiler folder found at '$compilerFolder'."
        # ==================================

        # الآن بعد أن تأكدنا من وجود كل شيء، نقوم بالتحويل
        & "$compilerFolder\Ahk2Exe.exe" /in "$($env:GITHUB_WORKSPACE)\Playback.ahk" /out "$($env:GITHUB_WORKSPACE)\Playback.exe" /icon "$($env:GITHUB_WORKSPACE)\play_pause_icon_137298.ico"
        
    # الخطوة 5: رفع الملف التنفيذي الناتج
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: Compiled-Program
        path: Playback.exe