name: Build AutoHotkey Script (with Verification Loop)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout code (No change)
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Install AutoHotkey Core (No change)
    - name: Install AutoHotkey Core
      shell: pwsh
      run: |
        $setupUrl = "https://github.com/AutoHotkey/AutoHotkey/releases/download/v2.0.19/AutoHotkey_2.0.19_setup.exe"
        $setupFile = "AutoHotkey_setup.exe"
        Invoke-WebRequest -Uri $setupUrl -OutFile $setupFile
        Start-Process -FilePath $setupFile -ArgumentList "/silent /elevate" -Wait

    # Step 3: Install Compiler and Wait
    - name: Install Compiler and Wait
      shell: pwsh
      run: |
        $installScriptPath = "C:\Program Files\AutoHotkey\UX\install-version.ahk"

        # --- Part A: Precisely remove ONLY the last MsgBox ---
        Write-Output "Patching '$installScriptPath' to remove the final MsgBox..."
        $lines = Get-Content -Path $installScriptPath
        $lastMatchIndex = -1
        for ($i = 0; $i -lt $lines.Count; $i++) {
            if ($lines[$i] -like '*MsgBox*') {
                $lastMatchIndex = $i
            }
        }
        if ($lastMatchIndex -ne -1) {
            Write-Output "Found final MsgBox on line $($lastMatchIndex + 1). Removing it."
            $lines[$lastMatchIndex] = ""
        }
        Set-Content -Path $installScriptPath -Value $lines
        Write-Output "Script patched successfully."
        
        # --- Part B: Run the installer ---
        Write-Output "Running the compiler installation script (install-version.ahk)..."
        $interpreterPath = "C:\Program Files\AutoHotkey\v2\AutoHotkey.exe"
        Start-Process -FilePath $interpreterPath -ArgumentList "/script `"$installScriptPath`"" -Wait
        Write-Output "Installer script process has finished."

        # --- Part C: Add a fixed wait for the file system to stabilize ---
        $waitSeconds = 30
        Write-Output "Waiting for $waitSeconds seconds as requested to ensure all processes are stable..."
        Start-Sleep -Seconds $waitSeconds
        Write-Output "Wait complete. Proceeding to compilation."

    # Step 4: Compile the Script (Final Version)
    - name: Compile the Script
      shell: pwsh
      run: |
        $compilerExe = "C:\Program Files\AutoHotkey\Compiler\Ahk2Exe.exe"
        $inputFile = Join-Path $env:GITHUB_WORKSPACE "Playback.ahk"
        $outputFile = Join-Path $env:GITHUB_WORKSPACE "Playback.exe"
        $iconFile = Join-Path $env:GITHUB_WORKSPACE "play_pause_icon_137298.ico"
        
        # --- الحل النهائي: إضافة مسار AutoHotkey إلى متغير PATH ---
        $ahk_v2_path = "C:\Program Files\AutoHotkey\v2"
        Write-Output "Adding '$ahk_v2_path' to the PATH environment variable..."
        $env:PATH = "$ahk_v2_path;" + $env:PATH
        Write-Output "New PATH: $env:PATH"
        # ---------------------------------------------------------
        
        Write-Output "Proceeding with compilation..."
        $arguments = "/in `"$inputFile`" /out `"$outputFile`" /icon `"$iconFile`""
        Write-Output "Executing: $compilerExe $arguments"
        
        & $compilerExe $arguments

        Start-Sleep -Seconds 5
        # --- Final verification ---
        if ($LASTEXITCODE -ne 0) {
            # لقد أضفنا فحصاً إضافياً هنا لتقديم رسالة أوضح إذا كان رمز الخروج فارغاً
            if ($null -eq $LASTEXITCODE -or "" -eq $LASTEXITCODE) {
                throw "COMPILER CRASHED: Ahk2Exe.exe failed without returning an exit code. This happens in CI/CD if it cannot find required base files."
            } else {
                throw "Ahk2Exe.exe failed with exit code $LASTEXITCODE. There was a compilation error."
            }
        }
        if (-not (Test-Path $outputFile)) {
            throw "VERIFICATION FAILED! The output file was not found after compilation."
        }
        Write-Output "SUCCESS! Compiled file has been verified at '$outputFile'."

    # Step 5: Upload executable (No change)
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: Compiled-Program
        path: Playback.exe