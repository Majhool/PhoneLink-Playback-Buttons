name: Build AutoHotkey Script (with Verification Loop)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout code (No change)
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Install AutoHotkey Core (No change)
    - name: Install AutoHotkey Core
      shell: pwsh
      run: |
        $setupUrl = "https://github.com/AutoHotkey/AutoHotkey/releases/download/v2.0.19/AutoHotkey_2.0.19_setup.exe"
        $setupFile = "AutoHotkey_setup.exe"
        Invoke-WebRequest -Uri $setupUrl -OutFile $setupFile
        Start-Process -FilePath $setupFile -ArgumentList "/silent /elevate" -Wait

    # Step 3: Install and Verify Compiler (NEW ROBUST VERSION)
    - name: Install and Verify Compiler
      shell: pwsh
      run: |
        # --- Part A: Patch and run the installer ---
        $installScriptPath = "C:\Program Files\AutoHotkey\UX\install-version.ahk"
        Write-Output "Patching '$installScriptPath' to run silently..."
        (Get-Content -Path $installScriptPath) | ForEach-Object { $_ -replace 'MsgBox, 4096,', '// MsgBox, 4096,' } | Set-Content -Path $installScriptPath
        
        Write-Output "Running the compiler installation script (install-version.ahk)..."
        $interpreterPath = "C:\Program Files\AutoHotkey\v2\AutoHotkey.exe"
        Start-Process -FilePath $interpreterPath -ArgumentList "/script `"$installScriptPath`"" -Wait
        Write-Output "Installer script process has finished. Now verifying completion..."

        # --- Part B: Wait for the REAL installation to finish ---
        # We now wait for a key file that is only present after a successful extraction.
        $compilerDir = "C:\Program Files\AutoHotkey\Compiler"
        $keyFile = Join-Path $compilerDir "Ahk2Exe_base_v2.bin" # This file is essential
        
        Write-Output "Waiting for key file '$keyFile' to appear..."
        $timeout = 120 # Wait for a maximum of 2 minutes
        $interval = 10 # Check every 10 seconds
        $stopwatch = [System.Diagnostics.Stopwatch]::StartNew()

        while ($stopwatch.Elapsed.TotalSeconds -lt $timeout) {
            if (Test-Path $keyFile) {
                Write-Output "Success! Key dependency file found. Installation is complete."
                $stopwatch.Stop()
                break
            }
            Write-Output "Installation not yet complete. Waiting for $interval more seconds..."
            Start-Sleep -Seconds $interval
        }

        if ($stopwatch.IsRunning) {
            $stopwatch.Stop()
            throw "TIMEOUT: Compiler installation failed. The key file '$keyFile' did not appear after $timeout seconds."
        }
        
        # --- Part C: Final check and log ---
        Write-Output "--- Final Contents of Compiler Directory ---"
        Get-ChildItem -Path $compilerDir -Recurse | ForEach-Object { Write-Output $_.Name }
        Write-Output "--- End of Directory Listing ---"

    # Step 4: Compile the Script (Now simplified)
    - name: Compile Script
      shell: pwsh
      run: |
        $compilerExe = "C:\Program Files\AutoHotkey\Compiler\Ahk2Exe.exe"
        $inputFile = Join-Path $env:GITHUB_WORKSPACE "Playback.ahk"
        $outputFile = Join-Path $env:GITHUB_WORKSPACE "Playback.exe"
        $iconFile = Join-Path $env:GITHUB_WORKSPACE "play_pause_icon_137298.ico"
        
        Write-Output "Proceeding with compilation..."
        # We can now add the /icon back, as the installation is verified
        & $compilerExe /in `"$inputFile`" /out `"$outputFile`" /icon `"$iconFile`"

        if ($LASTEXITCODE -ne 0) {
            throw "Ahk2Exe.exe failed with exit code $LASTEXITCODE. There was a compilation error."
        }
        if (-not (Test-Path $outputFile)) {
            throw "VERIFICATION FAILED! The output file was not found after compilation."
        }
        Write-Output "SUCCESS! Compiled file has been verified at '$outputFile'."

    # Step 5: Upload executable (No change)
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: Compiled-Program
        path: Playback.exe